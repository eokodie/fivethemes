subtitle_colour <- "#A0A0A0"
caption_colour <- "#888888"
axes_colour <- "#8F9394"
grid_colour <- "#606060"
text_colour <- "#5D5E62"
axes_label_colour <- "#888888"
background_colour <- "#36373B"
bg_rect <- ggplot2::element_rect(fill = background_colour, color = background_colour)
theme_five(grid) +
ggplot2::theme(
text = ggplot2::element_text(family = font_family),
plot.background = bg_rect,
panel.background = bg_rect,
legend.background = bg_rect,
plot.title = ggplot2::element_text(color = title_colour, size = 16, family = title_family, face = "bold"),
plot.subtitle = ggplot2::element_text(color = subtitle_colour, size = 12, family = font_family, face = "bold"),
plot.caption = ggplot2::element_text(color = caption_colour, size = 11, family = font_family),
axis.title.x = ggplot2::element_text(color = axes_label_colour, family = font_family, margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = ggplot2::element_text(color = axes_label_colour, family = font_family, margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0)),
axis.text = ggplot2::element_text(color = caption_colour, size = 9, family = font_family),
panel.grid.major = ggplot2::element_line(color = grid_colour, size = 0.25),
panel.grid.minor = ggplot2::element_line(color = grid_colour, size = 0.25)
)
}
p <- ggplot(mtcars, ggplot2::aes(cyl, mpg)) +
geom_point() +
annotate("text", x = 4.5, y = 34, label = "2019", parse = TRUE) +
labs(title = "Example title", subtitle = "Sample subtitle", caption = "Example caption")
p + theme_5classic(grid = "Xx")
p + theme_5minimal()
p + theme_5dark(grid = "Xx")
devtools::document()
library(fivethemes)
p <- ggplot(mtcars, ggplot2::aes(cyl, mpg)) +
geom_point() +
annotate("text", x = 4.5, y = 34, label = "2019", parse = TRUE) +
labs(title = "Example title", subtitle = "Sample subtitle", caption = "Example caption")
p + fivethemes::theme_5classic(grid = "Xx")
p + fivethemes::theme_5minimal()
p + fivethemes::theme_5dark(grid = "Xx")
library(fivethemes)
library(fivethemes)
# run 01_inflection.R
# then run the following code
library(magrittr)
source("~/.Rprofile")
RH = RobinHood::RobinHood(
username = Sys.getenv("username"),
password = Sys.getenv("pwd")
)
RH
ticker <- "MSFT"
quotes_tbl = RobinHood::get_historicals(
RH = RH,
symbol = ticker,
interval = '5minute',
span = 'day'
) %>%
tibble::as_tibble() %>%
dplyr::mutate(ticker = ticker) %>%
dplyr::mutate(row_no = dplyr::row_number())
# assume our data is quotes_tbl
closings = tail(quotes_tbl, 3)
x = closings$close_price
all(x == cummax(x))
w = quotes_tbl %>%
dplyr::select(begins_at, open_price, high_price, low_price, close_price) %>%
tsbox::ts_df()
w = xts::xts(w[, -1, drop=FALSE],  order.by=w[,1])
# plot candles
# Bullish engulfing
bullish_engulf_tbl <- CandleStickPattern::bullish.engulf(w) %>%
tsbox::ts_tbl() %>%
dplyr::mutate(row_no = dplyr::row_number()) %>%
dplyr::filter(value == TRUE)
bullish_engulf_tbl <- list(data = bullish_engulf_tbl, name = "bullish_engulf")
# bearish engulfing
bearish_engulf_tbl <- CandleStickPattern::bearish.engulf(w) %>%
tsbox::ts_tbl() %>%
dplyr::mutate(row_no = dplyr::row_number()) %>%
dplyr::filter(value == TRUE)
bearish_engulf_tbl <- list(data = bearish_engulf_tbl, name = "bearish_engulf")
# piercing line
piercing_line_tbl <- CandleStickPattern::piercing.line(w) %>%
tsbox::ts_tbl() %>%
dplyr::mutate(row_no = dplyr::row_number()) %>%
dplyr::filter(value == TRUE)
piercing_line_tbl <- list(data = piercing_line_tbl, name = "piercing_line")
# darkcloud_cover_tbl
darkcloud_cover_tbl <- CandleStickPattern::dark.cloud.cover(w) %>%
tsbox::ts_tbl() %>%
dplyr::mutate(row_no = dplyr::row_number()) %>%
dplyr::filter(value == TRUE)
darkcloud_cover_tbl <- list(data = darkcloud_cover_tbl, name = "darkcloud_cover")
# Hammer
hammer_tbl <- CandleStickPattern::hammer(w) %>%
tsbox::ts_tbl() %>%
dplyr::mutate(row_no = dplyr::row_number()) %>%
dplyr::filter(value == TRUE)
hammer_tbl <- list(data = hammer_tbl, name = "hammer")
# inverted_hammer_tbl
inverted_hammer_tbl <- CandleStickPattern::inverted.hammer(w) %>%
tsbox::ts_tbl() %>%
dplyr::mutate(row_no = dplyr::row_number()) %>%
dplyr::filter(value == TRUE)
inverted_hammer_tbl <- list(data = inverted_hammer_tbl, name = "inverted_hammer")
# # multiple rejection checks
# # TODO: Needs further work
# w = quotes_tbl %>%
#   dplyr::mutate(test_1 = abs(x$close_price[1]/close_price - 1) <= 0.003) %>%
#   dplyr::select(close_price, test_1) %>%
#   dplyr::filter(test_1 == TRUE)
# w
install.packages(CandleStickPattern)
install.packages('CandleStickPattern')
plot_candlestick <- function(quotes_tbl) {
if(nrow(quotes_tbl) == 0) stop("quotes_tbl is empty")
# Prepare CandleStick Data
red <- "#E7625F"
green <- "#18A558"
.palette = c(green, red)
candlestick_tbl <- quotes_tbl %>%
dplyr::mutate(
color = dplyr::case_when(open_price >= close_price ~ red,TRUE ~ green),
mid = (open_price + close_price)/2
)
# Plot Candlesticks
out <- ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity() +
ggplot2::labs(title = title, x = "Time", y = "Price") +
ggplot2::theme_light() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
out
}
plot_candlestick <- function(quotes_tbl) {
if(nrow(quotes_tbl) == 0) stop("quotes_tbl is empty")
# Prepare CandleStick Data
red <- "#E7625F"
green <- "#18A558"
.palette = c(green, red)
candlestick_tbl <- quotes_tbl %>%
dplyr::mutate(
color = dplyr::case_when(open_price >= close_price ~ red,TRUE ~ green),
mid = (open_price + close_price)/2
)
# Plot Candlesticks
out <- ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity() +
ggplot2::labs(title = title, x = "Time", y = "Price") +
ggplot2::theme_light() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
out
}
# examples ----------------------------------------------------------------
# long
plot_candlestick(quotes_tbl)
quotes_tbl
red <- "#E7625F"
green <- "#18A558"
.palette = c(green, red)
candlestick_tbl <- quotes_tbl %>%
dplyr::mutate(
color = dplyr::case_when(open_price >= close_price ~ red,TRUE ~ green),
mid = (open_price + close_price)/2
)
candlestick_tbl
ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
)
ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
)
ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette)
ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity()
ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity() +
ggplot2::labs(title = title, x = "Time", y = "Price")
quotes_tbl
plot_candlestick <- function(quotes_tbl, title) {
if(nrow(quotes_tbl) == 0) stop("quotes_tbl is empty")
# Prepare CandleStick Data
red <- "#E7625F"
green <- "#18A558"
.palette = c(green, red)
candlestick_tbl <- quotes_tbl %>%
dplyr::mutate(
color = dplyr::case_when(open_price >= close_price ~ red,TRUE ~ green),
mid = (open_price + close_price)/2
)
# Plot Candlesticks
out <- ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity() +
ggplot2::labs(title = title, x = "Time", y = "Price") +
ggplot2::theme_light() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
out
}
# examples ----------------------------------------------------------------
# long
plot_candlestick(quotes_tbl, title = "MSFT")
plot_candlestick <- function(quotes_tbl, title) {
if(nrow(quotes_tbl) == 0) stop("quotes_tbl is empty")
# Prepare CandleStick Data
red <- "#E7625F"
green <- "#18A558"
.palette = c(green, red)
candlestick_tbl <- quotes_tbl %>%
dplyr::mutate(
color = dplyr::case_when(open_price >= close_price ~ red,TRUE ~ green),
mid = (open_price + close_price)/2
)
# Plot Candlesticks
out <- ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity() +
ggplot2::labs(title = title, x = "Time", y = "Price") +
ggplot2::theme_light() +
fivethemes::theme_5dark(grid = "Yy") +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
out
}
# examples ----------------------------------------------------------------
# long
plot_candlestick(quotes_tbl, title = "MSFT")
plot_candlestick <- function(quotes_tbl, title) {
if(nrow(quotes_tbl) == 0) stop("quotes_tbl is empty")
# Prepare CandleStick Data
red <- "#E7625F"
green <- "#18A558"
.palette = c(green, red)
candlestick_tbl <- quotes_tbl %>%
dplyr::mutate(
color = dplyr::case_when(open_price >= close_price ~ red,TRUE ~ green),
mid = (open_price + close_price)/2
)
# Plot Candlesticks
out <- ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity() +
ggplot2::labs(title = title, x = "Time", y = "Price") +
ggplot2::theme_light() +
fivethemes::theme_5dark(grid = "Xx") +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
out
}
# examples ----------------------------------------------------------------
# long
plot_candlestick(quotes_tbl, title = "MSFT")
# Plot Candlesticks
out <- ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity() +
ggplot2::labs(title = title, x = "Time", y = "Price") +
ggplot2::theme_light() +
fivethemes::theme_5classic(grid = "Xx") +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
out
plot_candlestick <- function(quotes_tbl, title) {
if(nrow(quotes_tbl) == 0) stop("quotes_tbl is empty")
# Prepare CandleStick Data
red <- "#E7625F"
green <- "#18A558"
.palette = c(green, red)
candlestick_tbl <- quotes_tbl %>%
dplyr::mutate(
color = dplyr::case_when(open_price >= close_price ~ red,TRUE ~ green),
mid = (open_price + close_price)/2
)
# Plot Candlesticks
out <- ggplot2::ggplot(
data = candlestick_tbl,
ggplot2::aes(
x      = begins_at,
ymin   = low_price,
lower  = open_price,
middle = mid,
upper  = close_price,
ymax   = high_price,
color  = color,
fill   = color
)
) +
ggplot2::geom_boxplot(
ggplot2::aes(group = interaction(begins_at, color)),
position = ggplot2::position_dodge(width = 2),
alpha    = 1,
width    = 200,
stat     ="identity"
) +
ggplot2::scale_fill_manual(values =  .palette) +
ggplot2::scale_color_identity() +
ggplot2::labs(title = title, x = "Time", y = "Price") +
ggplot2::theme_light() +
fivethemes::theme_5classic(grid = "Xx") +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
out
}
# examples ----------------------------------------------------------------
# long
plot_candlestick(quotes_tbl, title = "MSFT")
